@import "../../../stylesheets/modules/config";

.container {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  .workspace {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 50%;
    width: 50%;
    border: 1px dashed white;

    svg {
      display:none;
    }

    $max: 100%;
    $mid: 50%;
    $radius: 60px;

    @keyframes rotation {
      from {transform: rotate(0deg);}
      to {transform: rotate(360deg);}
    }

    @keyframes translateBall1 {
      to {transform: translate(#{$radius * .25}, #{$radius * .25});}
    }
    @keyframes translateBall2 {
      to {transform: translate(#{$radius * .9}, #{$radius * .25});}
    }
    @keyframes translateBall3 {
      to {transform: translate(#{$radius * .9}, #{$radius * .9});}
    }
    @keyframes translateBall4 {
      to {transform: translate(#{$radius * .25}, #{$radius * .9});}
    }

    .liquidContainer {
      height: 100px;
      width: 100px;

      position: relative;

      filter: url('#filter');

      animation: rotation 20s infinite linear;

      .mainBall {
        height: $radius;
        width: $radius;

        position: absolute;
        top: calc(#{$mid} - #{$radius / 2});
        left: calc(#{$mid} - #{$radius / 2});

        background-color: coral;
        border-radius: 100%;
      }

      .ball {
        width: $radius / 2;
        height: $radius / 2;

        position: absolute;

        &:before {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          content: '';

          background-color: coral;
          border-radius: 100%;
        }

        /* minX: .4, minY: .4, maxX: .25, maxY: .25 */
        transform: translate(#{$radius * .4}, #{$radius * .4});
        animation: translateBall1 1s infinite alternate ease-in-out;

        // left: calc(#{$mid} - #{$radius * .42}); /* min: .42, max: .58, corner: 1 */
        // top: calc(#{$mid} - #{$radius * .42}); /* min: .42, max: .58, corner: 1 */

        &:nth-child(2) {
          /* minX: .756, minY: .4, maxX: .9, maxY: .25 */
          transform: translate(#{$radius * .756}, #{$radius * .4});
          animation: translateBall2 1s infinite alternate ease-in-out;

          // top: calc(#{$mid} - #{$radius * .42}); /* min: .42, max: .58, corner: 1 */
          // left: calc(#{$max} - #{$radius * .9}); /* min: .9, max: .75, corner: .25 */
        }

        &:nth-child(3) {
          /* minX: .756, minY: .756, maxX: .9, maxY: .9 */
          transform: translate(#{$radius * .756}, #{$radius * .756});
          animation: translateBall3 1s infinite alternate ease-in-out;

          // top: calc(#{$max} - #{$radius * .9}); /* min: .9, max: .75, corner: .25 */
          // left: calc(#{$max} - #{$radius * .9}); /* min: .9, max: .75, corner: .25 */
        }

        &:nth-child(4) {
          /* minX: .4, minY: .756, maxX: .25, maxY: .9 */
          transform: translate(#{$radius * .4}, #{$radius * .756});
          animation: translateBall4 1s infinite alternate ease-in-out;

          // top: calc(#{$max} - #{$radius * .9}); /* min: .9, max: .75, corner: .25 */
          // left: calc(#{$mid} - #{$radius * .42}); /* min: .42, max: .58, corner: 1 */
        }
      }
    }
  }
}
